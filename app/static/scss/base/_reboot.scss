@use "sass:map";
@use "variables";
@use "../mixins/motion";

* {
  margin: 0;
}

html::before {
  content: "";
  position: fixed;
  inset: 0;
  background: variables.$body-gradient;
  opacity: variables.$body-gradient-opacity;
  min-height: 100%;
}

body {
  position: relative;
  color: white;
  font-family: variables.$font-family-sans-serif;
  font-size: variables.$font-size-base;
  margin-inline: auto;
  line-height: variables.$line-height-base;
  background: variables.$body-bg;
  max-width: variables.$body-width;
  padding-block: map.get(variables.$spacers, 2);
}

a {
  text-decoration: none;
}

p {
  white-space: pre-wrap;
  word-break: break-all;
}

h1 {
  font-size: 2.5rem;
  margin-bottom: map.get(variables.$spacers, 4);
}

h2 {
  font-size: 2rem;
  margin-bottom: map.get(variables.$spacers, 3);
}

h3 {
  font-size: 1.75rem;
  margin-bottom: map.get(variables.$spacers, 3);
}

h4 {
  font-size: 1.5rem;
  margin-bottom: map.get(variables.$spacers, 2);
}

hr {
  border: 1px solid variables.$secondary;
  margin-block: map.get(variables.$spacers, 5);
}

img {
  max-width: 100%;
  border-radius: variables.$border-radius;
}

table {
  width: 100%;
  border-radius: variables.$border-radius;
  border-collapse: separate;
  border-spacing: map.get(variables.$spacers, 1);

  tr { 
    td {
      @include motion.transition(background-color); 

      background: variables.$secondary;
      padding: map.get(variables.$spacers, 2);
      border-radius: variables.$border-radius * 0.5;
      text-align: left;
      color: variables.$light;
    }

    &:hover td {
      background: rgba(variables.$primary, 25%);
    }
  }

  thead td {
    font-weight: bold;

    &:first-of-type {
      border-top-left-radius: variables.$border-radius;
    }

    &:last-of-type {
      border-top-right-radius: variables.$border-radius;
    }
  }

  tbody tr {
    &:last-of-type {
      td {
        &:first-of-type {
          border-bottom-left-radius: variables.$border-radius;
        }
  
        &:last-of-type {
          border-bottom-right-radius: variables.$border-radius;
        }
      }
    }
  }
}

aside {
  display: flex;
  align-items: baseline;
  justify-content: end;
}

input, textarea {
  color: inherit;
  font: inherit;
  border: none;
  outline: none;
}

textarea {
  resize: none;
}

input[type="file"] {
  display: none;
}

input[type="number"] { 
  appearance: textfield;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button { 
  appearance: none;
}

.switch {
  cursor: pointer;
  position: relative;
  display: inline-block;
  width: 40px;
  height: 24px;
}

.switch input {
  display: none;
}

.slider {
  position: absolute;
  inset: 0;
  background: variables.$light;
  border-radius: 24px;
  transition: 100ms;
}

.slider::before {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  left: 4px;
  bottom: 4px;
  background: white;
  border-radius: 50%;
  transition: 100ms;
}

input:checked + .slider {
  background: variables.$primary;
}

input:checked + .slider::before {
  transform: translateX(16px);
}
